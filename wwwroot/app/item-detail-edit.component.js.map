{"version":3,"sources":["item-detail-edit.component.ts"],"names":["core_1","require","router_1","item_1","item_service_1","auth_service_1","ItemDetailEditComponent","itemService","authService","router","activatedRoute","this","prototype","ngOnInit","_this","isLoggedIn","navigate","id","snapshot","params","get","subscribe","item","console","log","Item","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onRefreshToken","refreshToken","token","JSON","stringify","onBack","onItemDetailView","onGetUserInfo","user","alert","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"wmBAAAA,OAAAC,QAAkC,iBAClCC,SAAAD,QAAuC,mBACvCE,OAAAF,QAAqB,UACrBG,eAAAH,QAA4B,kBAC5BI,eAAAJ,QAA4B,kBAO5BK,wBAAA,WAEI,QAAAA,yBAAoBC,YACRC,YACAC,OACAC,gBAHQC,KAAAJ,YAAAA,YACRI,KAAAH,YAAAA,YACAG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eA0EhB,MAxEIJ,yBAAAM,UAAAC,SAAA,WAAA,GAAAC,OAAAH,IACSA,MAAKH,YAAYO,cAClBJ,KAAKF,OAAOO,UAAU,IAE1B,IAAIC,KAAMN,KAAKD,eAAeQ,SAASC,OAAW,EAC9CF,IACAN,KAAKJ,YAAYa,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAR,OAAKQ,KAAOA,OACzC,IAAPL,IACPM,QAAQC,IAAI,iCACZb,KAAKW,KAAO,GAAInB,QAAAsB,KAAK,EAAG,WAAY,QAEpCF,QAAQC,IAAI,uCACZb,KAAKF,OAAOO,UAAU,OAI9BV,wBAAAM,UAAAc,SAAA,SAASJ,MAAT,GAAAR,OAAAH,IACIA,MAAKJ,YAAYoB,IAAIL,MAAMD,UACvB,SAACO,MACGd,MAAKQ,KAAOM,KACZL,QAAQC,IAAI,QAAQV,MAAKQ,KAAKO,GAAE,mBAChCf,MAAKL,OAAOO,UAAU,MAE1B,SAACc,OAAU,MAAAP,SAAQC,IAAIM,UAI/BxB,wBAAAM,UAAAmB,SAAA,SAAST,MAAT,GAAAR,OAAAH,IACIA,MAAKJ,YAAYyB,OAAOV,MAAMD,UAC1B,SAACO,MACGd,MAAKQ,KAAOM,KACZL,QAAQC,IAAI,QAAQV,MAAKQ,KAAKO,GAAE,qBAChCf,MAAKL,OAAOO,UAAU,YAAaF,MAAKQ,KAAKO,MAEjD,SAACC,OAAU,MAAAP,SAAQC,IAAIM,UAI/BxB,wBAAAM,UAAAqB,SAAA,SAASX,MAAT,GAAAR,OAAAH,KACQM,GAAKK,KAAKO,EACdlB,MAAKJ,YAAY2B,OAAOjB,IAAII,UACxB,SAACO,MACGL,QAAQC,IAAI,QAAQV,MAAKQ,KAAKO,GAAE,qBAChCf,MAAKL,OAAOO,UAAU,MAE1B,SAACc,OAAU,MAAAP,SAAQC,IAAIM,UAQ/BxB,wBAAAM,UAAAuB,eAAA,WACIxB,KAAKH,YAAY4B,eACZf,UAAU,SAAAgB,OAAS,MAAAd,SAAQC,IAAI,mBAAqBc,KAAKC,UAAUF,WAG5E/B,wBAAAM,UAAA4B,OAAA,WACI7B,KAAKF,OAAOO,UAAU,MAG1BV,wBAAAM,UAAA6B,iBAAA,SAAiBnB,MACbX,KAAKF,OAAOO,UAAU,YAAaM,KAAKO,MAI5CvB,wBAAAM,UAAA8B,cAAA,WACI/B,KAAKH,YAAYY,MAAMC,UAAU,SAAAsB,MAC7BC,MAAM,mBAAqBN,KAAKC,UAAUI,UAjFtDrC,wBAAAuC,YAAC7C,OAAA8C,WACGC,SAAU,mBACVC,YAAa,6CACbC,WAAY,iMAEHC,SAAA5C,wBAAuBA","file":"item-detail-edit.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Item } from './item';\r\nimport { ItemService } from './item.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    selector: 'item-detail-edit',\r\n    templateUrl: './template/item-detail-edit.component.html',\r\n    styleUrls: ['./css/item-detail.component.css']\r\n})\r\nexport class ItemDetailEditComponent implements OnInit {\r\n    item: Item;\r\n    constructor(private itemService: ItemService,\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        if (!this.authService.isLoggedIn()) {\r\n            this.router.navigate(['']);\r\n        }\r\n        let id = +this.activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n        } else if (id === 0) {\r\n            console.log('id is 0: adding a new item...');\r\n            this.item = new Item(0, 'New Item', null);\r\n        } else {\r\n            console.log('Invalid id: routing back to home...');\r\n            this.router.navigate(['']);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(`Item ${this.item.Id} has been added`);\r\n                this.router.navigate(['']);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(`Item ${this.item.Id} has been updated`);\r\n                this.router.navigate(['item/view', this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        let id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(`Item ${this.item.Id} has been updated`);\r\n                this.router.navigate(['']);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 處理 Token 逾期的時候，可以透過 refresh token 再次取得（不需要重新登入）\r\n     * \r\n     */\r\n    onRefreshToken() {\r\n        this.authService.refreshToken()\r\n            .subscribe(token => console.log('refresh result: ' + JSON.stringify(token)));\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate(['item/view', item.Id]);\r\n        // return false;\r\n    }\r\n\r\n    onGetUserInfo() {\r\n        this.authService.get().subscribe(user => {\r\n            alert('current user is ' + JSON.stringify(user));\r\n        });\r\n    }\r\n}\r\n"]}