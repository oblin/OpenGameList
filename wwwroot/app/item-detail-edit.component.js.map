{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","onItemDetailView","__decorate","core_1","Component","selector","template","styleUrls","exports_1"],"mappings":"8/BAyCAA,wBAAA,WAEI,QAAAA,yBAAoBC,YACRC,OACAC,gBAFQC,KAAAH,YAAAA,YACRG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eAuDhB,MArDIH,yBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAC9CF,IACAJ,KAAKH,YAAYU,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OACzC,IAAPL,IACPM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAEpCH,QAAQC,IAAI,uCACZX,KAAKF,OAAOgB,UAAU,OAI9BlB,wBAAAK,UAAAc,SAAA,SAASN,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYmB,IAAIP,MAAMD,UACvB,SAACS,MACGd,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAQR,MAAKM,KAAKS,GAAE,mBAChCf,MAAKL,OAAOgB,UAAU,MAE1B,SAACK,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAmB,SAAA,SAASX,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYwB,OAAOZ,MAAMD,UAC1B,SAACS,MACGd,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAQR,MAAKM,KAAKS,GAAE,qBAChCf,MAAKL,OAAOgB,UAAU,YAAaX,MAAKM,KAAKS,MAEjD,SAACC,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAqB,SAAA,SAASb,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKS,EACdlB,MAAKH,YAAY0B,OAAOnB,IAAII,UACxB,SAACS,MACGP,QAAQC,IAAI,QAAQR,MAAKM,KAAKS,GAAE,qBAChCf,MAAKL,OAAOgB,UAAU,MAE1B,SAACK,OAAU,MAAAT,SAAQC,IAAIQ,UAI/BvB,wBAAAK,UAAAuB,OAAA,WACIxB,KAAKF,OAAOgB,UAAU,MAG1BlB,wBAAAK,UAAAwB,iBAAA,SAAiBhB,MACbT,KAAKF,OAAOgB,UAAU,YAAaL,KAAKS,MA7FhDtB,wBAAA8B,YAACC,OAAAC,WACGC,SAAU,mBACVC,SAAU,oiDAgCVC,WAAY,uKAEhBC,UAAA,0BAAApC","file":"item-detail-edit.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Item } from './item';\r\nimport { ItemService } from './item.service';\r\n\r\n@Component({\r\n    selector: 'item-detail-edit',\r\n    template: `\r\n        <div *ngIf=\"item\" class=\"item-container\">\r\n            <div class=\"item-tab-menu\">\r\n                <span class=\"selected\">Edit</span>\r\n                <span *ngIf=\"item.Id != 0\" (click)=\"onItemDetailView(item)\">View</span>\r\n            </div>\r\n            <div class=\"item-details\">\r\n                <div class=\"mode\">Edit Mode</div>\r\n               <h2>{{ item.Title }}</h2>\r\n                <ul>\r\n                    <li>\r\n                        <label>Title: </label>\r\n                        <input [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" />                     \r\n                    </li>\r\n                    <li>\r\n                        <label>Description: </label>\r\n                        <textarea [(ngModel)]=\"item.Description\" \r\n                            placeholder=\"Insert a suitable description...\" rows=\"5\"></textarea>\r\n                    </li>\r\n                </ul>\r\n                <div *ngIf=\"item.Id == 0\" class=\"commands insert\">\r\n                    <input type=\"button\" value=\"Save\" (click)=\"onInsert(item)\" />\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"onBack()\" />\r\n                </div>\r\n                <div *ngIf=\"item.Id != 0\" class=\"commands update\">\r\n                    <input type=\"button\" value=\"Update\" (click)=\"onUpdate(item)\" />\r\n                    <input type=\"button\" value=\"Delete\" (click)=\"onDelete(item)\" />\r\n                    <input type=\"button\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./css/item-detail.component.css']\r\n})\r\nexport class ItemDetailEditComponent implements OnInit {\r\n    item: Item;\r\n    constructor(private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        let id = +this.activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n        } else if (id === 0) {\r\n            console.log('id is 0: adding a new item...');\r\n            this.item = new Item(0, 'New Item', null);\r\n        } else {\r\n            console.log('Invalid id: routing back to home...');\r\n            this.router.navigate(['']);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(`Item ${this.item.Id} has been added`);\r\n                this.router.navigate(['']);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            (data) => {\r\n                this.item = data;\r\n                console.log(`Item ${this.item.Id} has been updated`);\r\n                this.router.navigate(['item/view', this.item.Id]);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        let id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            (data) => {\r\n                console.log(`Item ${this.item.Id} has been updated`);\r\n                this.router.navigate(['']);\r\n            },\r\n            (error) => console.log(error)\r\n        );\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n        this.router.navigate(['item/view', item.Id]);\r\n    }\r\n}\r\n"]}