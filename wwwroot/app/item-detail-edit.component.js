"use strict";var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)},core_1=require("@angular/core"),router_1=require("@angular/router"),item_1=require("./item"),item_service_1=require("./item.service"),auth_service_1=require("./auth.service"),ItemDetailEditComponent=function(){function ItemDetailEditComponent(itemService,authService,router,activatedRoute){this.itemService=itemService,this.authService=authService,this.router=router,this.activatedRoute=activatedRoute}return ItemDetailEditComponent.prototype.ngOnInit=function(){var _this=this;this.authService.isLoggedIn()||this.router.navigate([""]);var id=+this.activatedRoute.snapshot.params.id;id?this.itemService.get(id).subscribe(function(item){return _this.item=item}):0===id?(console.log("id is 0: adding a new item..."),this.item=new item_1.Item(0,"New Item",null)):(console.log("Invalid id: routing back to home..."),this.router.navigate([""]))},ItemDetailEditComponent.prototype.onInsert=function(item){var _this=this;this.itemService.add(item).subscribe(function(data){_this.item=data,console.log("Item "+_this.item.Id+" has been added"),_this.router.navigate([""])},function(error){return console.log(error)})},ItemDetailEditComponent.prototype.onUpdate=function(item){var _this=this;this.itemService.update(item).subscribe(function(data){_this.item=data,console.log("Item "+_this.item.Id+" has been updated"),_this.router.navigate(["item/view",_this.item.Id])},function(error){return console.log(error)})},ItemDetailEditComponent.prototype.onDelete=function(item){var _this=this,id=item.Id;this.itemService.delete(id).subscribe(function(data){console.log("Item "+_this.item.Id+" has been updated"),_this.router.navigate([""])},function(error){return console.log(error)})},ItemDetailEditComponent.prototype.onRefreshToken=function(){this.authService.refreshToken().subscribe(function(token){return console.log("refresh result: "+JSON.stringify(token))})},ItemDetailEditComponent.prototype.onBack=function(){this.router.navigate([""])},ItemDetailEditComponent.prototype.onItemDetailView=function(item){this.router.navigate(["item/view",item.Id])},ItemDetailEditComponent=__decorate([core_1.Component({selector:"item-detail-edit",templateUrl:"./template/item-detail-edit.component.html",styleUrls:["./css/item-detail.component.css"]}),__metadata("design:paramtypes",[item_service_1.ItemService,auth_service_1.AuthService,router_1.Router,router_1.ActivatedRoute])],ItemDetailEditComponent)}();exports.ItemDetailEditComponent=ItemDetailEditComponent;
//# sourceMappingURL=item-detail-edit.component.js.map
