{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0C,eAAe,CAAC,CAAA;AAC1D,uBAAuB,iBAAiB,CAAC,CAAA;AAEzC,6BAA4B,gBAAgB,CAAC,CAAA;AAiB7C;IAGI,sBAAoB,MAAc,EACtB,WAAwB,EACzB,IAAY;QAFH,WAAM,GAAN,MAAM,CAAQ;QACtB,gBAAW,GAAX,WAAW,CAAa;QACzB,SAAI,GAAJ,IAAI,CAAQ;QAJvB,UAAK,GAAG,cAAc,CAAC;QAKnB,EAAE,CAAC,CAAC,CAAO,MAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;YACvC,IAAI,MAAI,GAAG,IAAI,CAAC;YACV,MAAO,CAAC,qBAAqB,GAAG,UAAU,IAAI;gBAChD,MAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACV,MAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;YACP,CAAC,CAAA;QACL,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,+BAAQ,GAAR,UAAS,IAAW;QAChB,wCAAwC;QACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;QACvB,iCAAiC;QACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,6BAAM,GAAN;QAAA,iBAQC;QAPG,qDAAqD;QACrD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;YACtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,4CAAqB,GAArB,UAAsB,IAAS;QAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,0CAAwC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,YAAc,CAAC,CAAC;QAC/F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,+BAAQ,GAAR;QACI,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAC3C,CAAC;IACL,CAAC;IA/DL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,+BAA+B;SAY/C,CAAC;;oBAAA;IAkDF,mBAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,oBAAY,eAiDxB,CAAA","file":"app.component.js","sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n    selector: 'opengamelist',\r\n    templateUrl: './template/app.component.html'\r\n    // 改用 templateUrl\r\n    // template: `\r\n    //     <h1>{{ title }}</h1>\r\n    //     <div class=\"menu\">\r\n    //         <a class=\"home\" [routerLink]=\"['']\">Home</a>\r\n    //         | <a class=\"about\" [routerLink]=\"['about']\">About</a>\r\n    //         | <a class=\"login\" [routerLink]=\"['login']\">Login</a>\r\n    //         | <a class=\"add\" [routerLink]=\"['item/edit', 0]\">Add New</a>\r\n    //     </div>\r\n    //     <router-outlet></router-outlet>\r\n    // `\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'OpenGameList';\r\n\r\n    constructor(private router: Router,\r\n        private authService: AuthService,\r\n        public zone: NgZone) {\r\n        if (!(<any>window).externalProviderLogin) {\r\n            let self = this;\r\n            (<any>window).externalProviderLogin = function (auth) {\r\n                self.zone.run(() => {\r\n                    self.externalProviderLogin(auth);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判斷傳入的資料組合是否是目前的 url\r\n     * @param {any[]} ex: ['item/edit', 0], ['login'] \r\n     */\r\n    isActive(link: any[]): boolean {\r\n        // 利用 router.isActive(url) 判斷是否是目前的 url \r\n        return this.router.isActive(\r\n            // 使用 ['item/edit', 0] 組合成目前的 url\r\n            this.router.createUrlTree(link), true);\r\n    }\r\n\r\n    logout(): boolean {\r\n        // logout current user, then redirect to welcome view\r\n        this.authService.logout().subscribe(result => {\r\n            if (result) {\r\n                this.router.navigate(['']);\r\n            }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    externalProviderLogin(auth: any) {\r\n        this.authService.setAuth(auth);\r\n        console.log(`External Login successful! Provider: ${this.authService.getAuth().providerName}`);\r\n        this.router.navigate(['']);\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log('App Component is start....');\r\n        if (this.authService.getAuth()) {\r\n            this.authService.startupTokenRefresh();\r\n        }\r\n    }\r\n}\r\n"]}