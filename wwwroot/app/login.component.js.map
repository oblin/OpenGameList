{"version":3,"sources":["login.component.ts"],"names":["core_1","require","forms_1","router_1","auth_service_1","LoginComponent","fb","router","authService","this","title","loginError","externalProviderWindow","prototype","ngOnInit","loginForm","group","username","Validators","required","password","performLogin","e","_this","preventDefault","value","login","subscribe","data","navigate","err","console","log","onRegister","callExternalLogin","providerName","url","w","screen","width","h","height","params","close","window","open","__decorate","Component","selector","templateUrl","exports"],"mappings":"wmBAAAA,OAAAC,QAAkC,iBAClCC,QAAAD,QAAmD,kBACnDE,SAAAF,QAAuB,mBACvBG,eAAAH,QAA4B,kBAO5BI,eAAA,WAMI,QAAAA,gBAAoBC,GACRC,OACAC,aAFQC,KAAAH,GAAAA,GACRG,KAAAF,OAAAA,OACAE,KAAAD,YAAAA,YAPZC,KAAAC,MAAQ,QAERD,KAAAE,YAAa,EACbF,KAAAG,uBAAyB,KAgD7B,MA1CIP,gBAAAQ,UAAAC,SAAA,WACIL,KAAKM,UAAYN,KAAKH,GAAGU,OACrBC,UAAW,GAAIf,QAAAgB,WAAWC,UAC1BC,UAAW,GAAIlB,QAAAgB,WAAWC,aAIlCd,eAAAQ,UAAAQ,aAAA,SAAaC,GAAb,GAAAC,OAAAd,IACIa,GAAEE,gBACF,IAAIP,UAAWR,KAAKM,UAAUU,MAAMR,SAChCG,SAAWX,KAAKM,UAAUU,MAAML,QACpCX,MAAKD,YAAYkB,MAAMT,SAAUG,UAC5BO,UACG,SAACC,MACGL,MAAKZ,YAAa,EAClBY,MAAKhB,OAAOsB,UAAU,MAE1B,SAACC,KACGC,QAAQC,IAAIF,KACZP,MAAKZ,YAAa,KAMlCN,eAAAQ,UAAAoB,WAAA,WACIxB,KAAKF,OAAOsB,UAAU,cAG1BxB,eAAAQ,UAAAqB,kBAAA,SAAkBC,cACd,GAAIC,KAAM,8BAAgCD,aAEtCE,EAAKC,OAAOC,OAAS,KAAQ,KAAOD,OAAOC,MAC3CC,EAAKF,OAAOG,QAAU,IAAO,IAAMH,OAAOG,OAC1CC,OAAS,kDAAkDL,EAAC,WAAWG,CAEvE/B,MAAKG,wBACLH,KAAKG,uBAAuB+B,QAEhClC,KAAKG,uBACDgC,OAAOC,KAAKT,IAAK,mBAAoBM,QAAQ,IAtDzDrC,eAAAyC,YAAC9C,OAAA+C,WACGC,SAAU,QACVC,YAAa,wJAEJC,SAAA7C,eAAcA","file":"login.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { UserEditComponent } from './user-edit.component';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: './template/login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    title = 'Login';\r\n    loginForm: FormGroup;\r\n    loginError = false;\r\n    externalProviderWindow = null;  // 必須要是 public 讓外部可以呼叫\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private router: Router,\r\n        private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.fb.group({\r\n            username: ['', Validators.required ],\r\n            password: ['', Validators.required ]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n        let username = this.loginForm.value.username;\r\n        let password = this.loginForm.value.password;\r\n        this.authService.login(username, password)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.loginError = false;\r\n                    this.router.navigate(['']);\r\n                },\r\n                (err) => {\r\n                    console.log(err);\r\n                    this.loginError = true;\r\n                }\r\n            );\r\n        // alert(JSON.stringify(this.loginForm.value));\r\n    }\r\n\r\n    onRegister() {\r\n        this.router.navigate(['register']);\r\n    }\r\n\r\n    callExternalLogin(providerName: string) {\r\n        let url = 'api/Accounts/ExternalLogin/' + providerName;\r\n        // minialistic mobile devices support\r\n        let w = (screen.width >= 1050) ? 1050 : screen.width;\r\n        let h = (screen.height >= 550) ? 550 : screen.height;\r\n        let params = `toolbar=yes,scrollbars=yes,resizable=yes,width=${w},height=${h}`;\r\n        // close previously opened windows (if any)\r\n        if (this.externalProviderWindow) {\r\n            this.externalProviderWindow.close();\r\n        }\r\n        this.externalProviderWindow =\r\n            window.open(url, 'ExternalProvider', params, false);\r\n    }\r\n}\r\n"]}