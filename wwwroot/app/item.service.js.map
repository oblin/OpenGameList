{"version":3,"sources":["item.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAE3C,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,0BAAyB,aAAa,CAAC,CAAA;AAIvC;IAGI,qBAAoB,IAAc;QAAd,SAAI,GAAJ,IAAI,CAAU;QAF1B,YAAO,GAAG,YAAY,CAAC;IAEO,CAAC;IAEvC,gCAAU,GAAV,UAAW,GAAY;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QACvC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YAAC,GAAG,IAAI,GAAG,CAAC;QAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAQ,QAAQ,CAAC,IAAI,EAAE,EAAvB,CAAuB,CAAC;aACxC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,mCAAa,GAAb,UAAc,GAAY;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;QAC1C,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YAAC,GAAG,IAAI,GAAG,CAAC;QAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAChC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,+BAAS,GAAT,UAAU,GAAY;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QACtC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YAAC,GAAG,IAAI,GAAG,CAAC;QAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,QAAQ;YACT,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAC7C,MAAM,CAAS,QAAQ,CAAC,IAAI,EAAE,CAAC;QAClC,CAAC,CAAC;aACF,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,yFAAyF;IACzF,yBAAG,GAAH,UAAI,EAAU;QACV,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAAC,CAAC;QACvD,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACb,GAAG,CAAC,UAAA,QAAQ;YACT,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAC7B,MAAM,CAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;QAChC,CAAC,CAAC;aACF,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACH,yBAAG,GAAH,UAAI,IAAU;QACV,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACvC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;aACnC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAM,QAAQ,CAAC,IAAI,EAAE,EAArB,CAAqB,CAAC;aACtC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,wEAAwE;IACxE,4BAAM,GAAN,UAAO,IAAU;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACtC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC;aACnC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAChC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACH,4BAAM,GAAN,UAAO,EAAU;QACb,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;aACvB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACK,iCAAW,GAAnB,UAAoB,KAAe;QAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IAtFL;QAAC,iBAAU,EAAE;;mBAAA;IAuFb,kBAAC;AAAD,CAtFA,AAsFC,IAAA;AAtFY,mBAAW,cAsFvB,CAAA","file":"item.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthHttp } from './auth.http';\r\nimport { Item } from './item';\r\n\r\n@Injectable()\r\nexport class ItemService {\r\n    private baseUrl = 'api/items/';\r\n\r\n    constructor(private http: AuthHttp) { }\r\n\r\n    getLastest(num?: number): Observable<Item[]> {\r\n        let url = this.baseUrl + 'GetLastest/';\r\n        if (num != null) { url += num; }\r\n        return this.http.get(url)\r\n                   .map(response => <Item[]>response.json())\r\n                   .catch(this.handleError);\r\n    }\r\n\r\n    getMostViewed(num?: number): Observable<Item[]> {\r\n        let url = this.baseUrl + 'GetMostViewed/';\r\n        if (num != null) { url += num; }\r\n        return this.http.get(url)\r\n                   .map(response => response.json())\r\n                   .catch(this.handleError);\r\n    }\r\n\r\n    getRandom(num?: number): Observable<Item[]> {\r\n        let url = this.baseUrl + 'GetRandom/';\r\n        if (num != null) { url += num; }\r\n        return this.http.get(url)\r\n                   .map(response => {\r\n                       console.log('Get result: ', response.json());\r\n                       return <Item[]>response.json();\r\n                    })\r\n                   .catch(this.handleError);\r\n    }\r\n\r\n    // calls the [GET] /api/items/{id} Web API method to retrieve the item with the given id.\r\n    get(id: number): Observable<Item> {\r\n        if (id == null) { throw new Error('id is required.'); }\r\n        let url = this.baseUrl + id;\r\n        return this.http.get(url)\r\n                   .map(response => {\r\n                       console.log(response.json());\r\n                       return <Item>response.json();\r\n                    })\r\n                   .catch(this.handleError);\r\n    }\r\n\r\n    /**\r\n     * calls the [POST] /api/items/ Web API method to add a new item.\r\n     * @param {Item} item\r\n     * @returns {Observable<Item>} 傳回新增成功的 Item\r\n     */\r\n    add(item: Item): Observable<Item> {\r\n        let url = this.baseUrl;\r\n        return this.http.post(url, JSON.stringify(item),\r\n                this.http.RequestOptionJsonType)\r\n            .map(response => <Item>response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    // calls the [PUT] /api/items/ Web API method to update a existing item.\r\n    update(item: Item) {\r\n        let url = this.baseUrl + item.Id;\r\n        return this.http.put(url, JSON.stringify(item),\r\n                this.http.RequestOptionJsonType)\r\n            .map(response => response.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    /**\r\n     * calls the [DELETE] /api/items/{id} Web API method to delete the item with the given id.\r\n     * @param {number} id\r\n     * @returns\r\n     */\r\n    delete(id: number) {\r\n        let url = this.baseUrl + id;\r\n        return this.http.delete(url)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    /**\r\n     * 處理錯誤訊息，主要在 console.log 中紀錄\r\n     * @param {Response} error\r\n     * @returns Observable.throw error message\r\n     */\r\n    private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n"]}